rm(list=ls())
library(rgdal)
library(ggplot2)
library(rworldmap)
library(cleangeo)
library(dplyr)
library(gridExtra)
#' Load functions
source("R/shp_to_df.R")
source("R/create_discrete_scale_for_GLUE.R")
library(seqinr)
file.choose()
read.alignment("/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Asian_WGS/040321_Asian_WGS.fasta", format = "fasta")
alignment <-read.alignment("/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Asian_WGS/040321_Asian_WGS.fasta", format = "fasta")
View(alignment)
x5 <- sample(1:length(alignment$nam), 6, replace=F)
x5 <- sample(1:length(alignment$nam), 47, replace=F)
write.fasta(sequences = alignment$seq[-c(x5)], names = alignment$nam[-c(x5)], file.out = "/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Example.fasta")
x5 <- sample(1:length(alignment$nam), (length(alignment$nam)-100), replace=F)
write.fasta(sequences = alignment$seq[-c(x5)], names = alignment$nam[-c(x5)], file.out = "/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Example.fasta")
read.csv("/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Asian_WGS/Asian_WGS_metadata.csv")
metadata<-read.csv("/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Asian_WGS/Asian_WGS_metadata.csv")
alignment <-read.alignment("/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Example.fasta", format = "fasta")
View(alignment)
which(metadata$ID %in% alignment$nam)
metadata[which(metadata$ID %in% alignment$nam),]
metadata<-metadata[which(metadata$ID %in% alignment$nam),]
write.csv(metadata, file = "/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Example.csv")
write.csv(metadata, file = "/Users/kathryncampbell/Documents/GitHub/lineage_assignment/Example.csv", row.names = F)
clusters <- read.csv(paste(args[2], "/lineage_info.csv", sep = ""))
rm(list=ls())  #clear R
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
AsiaRabv <- read.csv("/Users/criseldabautista/Dropbox/My Mac (CTB)/Documents/RABV GLUE/RABV.2021_Metadata.csv")
AsiaRabv <- read.csv("/Users/kathryncampbell/Documents/RABV.2021_Metadata.numbers")
AsiaRabv <- read.csv("/Users/kathryncampbell/Documents/RABV.2021_Metadata.csv")
names(AsiaRabv)
str(AsiaRabv)
head(AsiaRabv)
tail(AsiaRabv)
philrabv <- filter(AsiaRabv, sequence.m49_country.id == "PHL")
philrabv
names(philrabv)
head(philrabv)
tail(philrabv)
Asiaseq<- AsiaRabv %>% select(sequence.collection_year, sequence.sequenceID, sequence.m49_country.id,alignment.displayName) %>%
count(sequence.m49_country.id,sequence.collection_year,alignment.displayName)
Asiaseq
###
AsiaRabv %>%
group_by(sequence.collection_year) %>%
summarise()
###
AsiaRabv %>%
group_by(sequence.collection_year) %>%
summarise(n=n())
View(Asiaseq)
ggplot(Asiaseq, aes(x=sequence.collection_year, y=n))+
geom_bar(stat="identity", fill="darkblue")+labs(title = "ASIA RABV GLUE Sequences", x = "Year", y = "Number of Sequences")+
theme_bw()
### If you just want to count the sequences per year, you can use group by and summarise:
Asiaseq<-AsiaRabv %>%
group_by(sequence.collection_year) %>%
summarise(n=n())
ggplot(Asiaseq, aes(x=sequence.collection_year, y=n))+
geom_bar(stat="identity", fill="darkblue")+labs(title = "ASIA RABV GLUE Sequences", x = "Year", y = "Number of Sequences")+
theme_bw()
### If you just want to count the sequences per year, you can use group by and summarise:
Asiaseq<-AsiaRabv %>%
group_by(sequence.latest_collection_year) %>%
summarise(n=n())
ggplot(Asiaseq, aes(x=sequence.collection_year, y=n))+
geom_bar(stat="identity", fill="darkblue")+labs(title = "ASIA RABV GLUE Sequences", x = "Year", y = "Number of Sequences")+
theme_bw()
### If you just want to count the sequences per year, you can use group by and summarise:
### Also, would recommend using latest collection year to avoid all the unidentified ones!
Asiaseq<-AsiaRabv %>%
group_by(sequence.latest_collection_year) %>%
summarise(n=n())
### If you just want to count the sequences per year, you can use group by and summarise:
### Also, would recommend using latest collection year to avoid all the unidentified ones!
Asiaseq<-AsiaRabv %>%
group_by(sequence.latest_collection_year) %>%
summarise(n=n())
ggplot(Asiaseq, aes(x=sequence.latest_collection_year, y=n))
View(Asiaseq)
ggplot(Asiaseq, aes(x=sequence.latest_collection_year, y=n))+
geom_bar(stat="identity", fill="darkblue")+labs(title = "ASIA RABV GLUE Sequences", x = "Year", y = "Number of Sequences")+
theme_bw()
yr2019 <- AsiaRabv %>% select(sequence.collection_year, sequence.sequenceID, sequence.m49_country.id) %>%
filter(sequence.collection_year == "2019") %>%
count(sequence.m49_country.id)
yr2019
ggplot(yr2019, aes(x=sequence.m49_country.id, y=n))+
geom_bar(stat="identity", fill="darkgreen")+labs(title = "2019 RABV GLUE Sequences", x = "Country", y = "Number of Sequences")+
theme_bw()
##Number of sequences in the Philippines per year
ggplot(philrabv, aes(x=sequence.collection_year))+
geom_bar(stat="count", fill="steelblue")+
labs(title = "Philippines RABV GLUE Sequences", x = "Year", y = "Number of Sequences")+
theme_bw()
##Number of sequences in the Phils per region
ggplot(philrabv, aes(x=sequence.gb_place_sampled_region))+
geom_bar(stat="count", fill="steelblue")+
labs(title = "Philippines RABV GLUE Sequences Per Region", x = "Region", y = "Number of Sequences")+
theme_bw()
## Number of sequences per country
ggplot(AsiaRabv, aes(x=sequence.m49_country.id))+
geom_bar(stat="count", fill="darkgreen")+labs(title = "ASIA RABV GLUE Sequences", x = "Country", y = "Number of Sequences")+
theme_bw()
attach(AsiaRabv)
View(AsiaRabv)
##  Shade the country or region by numbers of sequences or even clades
timeseries<- ggplot(AsiaRabv, aes(x=factor(sequence.latest_collection_year), fill=alignment.displayName))+
geom_histogram(stat="count") +
ggtitle(paste(args, "Time Series", sep = " "));timeseries
##  Shade the country or region by numbers of sequences or even clades
timeseries<- ggplot(AsiaRabv, aes(x=factor(sequence.latest_collection_year), fill=alignment.displayName))+
geom_histogram(stat="count") +
ggtitle(paste("Time Series"));timeseries
View(yr2019)
system.file("extdata", "References/Cosmo_WGS/reference_aligned.fasta", package = "MADDOG")
test<-system.file("extdata", "References/Cosmo_WGS/reference_aligned.fasta", package = "MADDOG")
test<-system.file("extdata", "reference_aligned.fasta", package = "MADDOG")
devtools::load_all()
setwd("~/MADDOG")
devtools::load_all()
devtools::install("MADDOG")
system.file("extdata", "reference_aligned.fasta", package = "MADDOG")
devtools::load_all()
devtools::install("MADDOG")
devtools::install()
library("MADDOG")
system.file("extdata", "reference_aligned.fasta", package = "MADDOG")
system.file("inst/extdata", "reference_aligned.fasta", package = "MADDOG")
system.file("inst/extdata", "lineage_info.csv", package = "MADDOG")
system.file("extdata", "lineage_info.csv", package = "MADDOG")
devtools::load_all()
devtools::install()
system.file("extdata", "lineage_info.csv", package = "MADDOG")
read.csv(system.file("extdata", "lineage_info.csv", package = "MADDOG"))
read.csv(system.file("extdata", "References/Cosmo_N/lineage_info.csv", package = "MADDOG"))
reference<-"Cosmo_N"
read.csv(system.file("extdata", paste("References/", reference, "/lineage_info.csv", sep = ""), package = "MADDOG"))
alignment<-seqinr::read.alignment(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"), format = "fasta")
reference<-"Cosmo_WGS"
alignment<-seqinr::read.alignment(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"), format = "fasta")
devtools::load_all()
devtools::install()
library("MADDOG")
reference<-"Cosmo_WGS"
alignment<-seqinr::read.alignment(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"), format = "fasta")
library(ips)
setwd("~/MADDOG")
mafft(alignment, "~/Documents/GitHub/MADDOG/Example_assignment/example.fasta")
install.packages("adegenet")
library(adegenet)
fasta2DNAbin(alignment)
fasta2DNAbin("~/Documents/GitHub/MADDOG/Example_assignment/example.fasta")
fasta2DNAbin(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG")
)
alignment<-fasta2DNAbin(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"))
mafft(alignment, "~/Documents/GitHub/MADDOG/Example_assignment/example.fasta")
sequences<-seqinr::read.alignment("~/Documents/GitHub/MADDOG/Example_assignment/example.fasta")
sequences<-seqinr::read.alignment("~/Documents/GitHub/MADDOG/Example_assignment/example.fasta", format = "fasta")
fasta2DNAbin(sequences)
sequences<-fasta2DNAbin("~/Documents/GitHub/MADDOG/Example_assignment/example.fasta")
mafft(alignment, sequences)
test<-mafft(alignment, sequences)
lapply(test, function(x) paste0(x, collapse = ''))
install.packages("strataG")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("msa")
library(msa)
alignment<-seqinr::read.alignment(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"), format = "fasta")
reference<-"Cosmo_WGS"
alignment<-seqinr::read.alignment(system.file("extdata", paste("References/", reference, "/reference_aligned.fasta", sep = ""), package = "MADDOG"), format = "fasta")
sequences<-seqinr::read.alignment("~/Documents/GitHub/MADDOG/Example_assignment/example.fasta", format = "fasta")
msa(c(alignment, sequences))
c(alignment, sequences)
test<-c(alignment, sequences)
View(test)
View(alignment)
alignment$nb
alignment$nb + sequences$nb
alignment$nb<-(alignment$nb + sequences$nb)
alignment$seq<-c(alignment$seq, sequences$seq)
alignment$nam<-c(alignment$nam, alignment$nam)
View(alignment)
rm(list=ls())
