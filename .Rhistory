tree<-ape::read.tree("omicron_subset_countries_aligned.fasta.contree")
View(tree)
View(tree)
tree[["tip.label"]]
data<-read.table("omicron_subset_countries.txt")
seq<-seqinr::read.alignment("Omicron_subsampled.fasta", "fasta")
which(seq$nam %in% data$V1)
View(data)
numbers<-which(seq$nam %in% data$V1)
seqinr::write.fasta(sequences = seq$seq[numbers], names = seq$nam[numbers], file.out = "omicron_subset_countries.fasta")
rm(list=ls())
setwd("~/MADDOG")
args<-"Example_designation"
source("R/seq_designation.R")
source("R/node_info.R")
source("R/lineage_info.R")
source("R/sunburst_function.r")
source("R/lineage_tree.r")
library(dplyr)
library(ggtree)
devtools::install_version('rvcheck',repos = "http://cran.us.r-project.org", version='0.1.8')
#############################################
#            IMPORT THE DATA                #
#############################################
#'
#'**TREE**
#'========================================================================================================
#' The tree must contain the element 'node.comment' which contains the bootstrap support/posterior support
#' And the element 'tip.label' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the metadata and alignment
#'=========================================================================================================
tree <- ape::read.tree(file = paste(args, "/Trees/", args, "_aligned.fasta.contree", sep = ""))
# Sequence names got messed up in MAFFT, need to fix these so they match metadata and alignment
# Also node comment is sometimes weird, fix it
# #KB- can replace above 2 lines with this:
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
#'**METADATA**
#'========================================================================================================
#' The metadata must contain the element 'year' which lists the collection year for each sequence
#' And the element 'ID' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the tree and alignment
#'=========================================================================================================
metadata <- read.csv(file = paste(args, "/", args, "_metadata.csv", sep = ""))
#'**ALIGNMENT**
#'========================================================================================================
#' The alignment must contain the element 'seq' which contains the sequences
#' And the element 'nam' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the metadata and tree
#'=========================================================================================================
alignment <- seqinr::read.alignment(file = (paste(args, "/Alignment/", args, "_aligned.fasta", sep = "")), format = "fasta")
# Sequence names got messed up in MAFFT, need to fix these so they match metadata and alignment
# #KB- can replace above 2 lines with this:
alignment$nam <- gsub("\\..*", "", alignment$nam, perl = T)
#'**TIMETREE**
#'========================================================================================================
#'
#'=========================================================================================================
ancestral <- seqinr::read.alignment(file = (paste(args, "/Timetree/ancestral_sequences.fasta", sep = "")), format = "fasta")
ancestral$nam <- gsub("\\..*", "", ancestral$nam, perl = T)
#############################################
#           RUN DESIGNATION                #
#############################################
sequence_designation<-seq_designation(tree, 90, alignment, metadata, ancestral)
defining_node_information<-node_info(tree, 90, alignment, metadata, ancestral)
lineage_info<-lineage_info(sequence_designation, metadata)
write.csv(sequence_designation, file = (paste(args, "/Outputs/", args, "_sequence_data.csv", sep = "")), row.names=F)
write.csv(defining_node_information, file = (paste(args, "/Outputs/", args, "_node_data.csv", sep = "")), row.names=F)
write.csv(lineage_info, file = (paste(args, "/Outputs/", args, "_lineage_info.csv", sep = "")), row.names=F)
new<-sunburst(lineage_info, defining_node_information, tree, metadata, sequence_designation)
rm(list=ls())
args<-"Example_designation"
source("R/seq_designation.R")
source("R/node_info.R")
source("R/lineage_info.R")
source("R/sunburst_function.r")
source("R/lineage_tree.r")
library(dplyr)
library(ggtree)
#############################################
#            IMPORT THE DATA                #
#############################################
#'
#'**TREE**
#'========================================================================================================
#' The tree must contain the element 'node.comment' which contains the bootstrap support/posterior support
#' And the element 'tip.label' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the metadata and alignment
#'=========================================================================================================
tree <- ape::read.tree(file = paste(args, "/Trees/", args, "_aligned.fasta.contree", sep = ""))
# Sequence names got messed up in MAFFT, need to fix these so they match metadata and alignment
# Also node comment is sometimes weird, fix it
# #KB- can replace above 2 lines with this:
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
#'**METADATA**
#'========================================================================================================
#' The metadata must contain the element 'year' which lists the collection year for each sequence
#' And the element 'ID' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the tree and alignment
#'=========================================================================================================
metadata <- read.csv(file = paste(args, "/", args, "_metadata.csv", sep = ""))
#'**ALIGNMENT**
#'========================================================================================================
#' The alignment must contain the element 'seq' which contains the sequences
#' And the element 'nam' which lists all the sequence ID's
#' These sequence ID's must match the sequence ID's in the metadata and tree
#'=========================================================================================================
alignment <- seqinr::read.alignment(file = (paste(args, "/Alignment/", args, "_aligned.fasta", sep = "")), format = "fasta")
# Sequence names got messed up in MAFFT, need to fix these so they match metadata and alignment
# #KB- can replace above 2 lines with this:
alignment$nam <- gsub("\\..*", "", alignment$nam, perl = T)
#'**TIMETREE**
#'========================================================================================================
#'
#'=========================================================================================================
ancestral <- seqinr::read.alignment(file = (paste(args, "/Timetree/ancestral_sequences.fasta", sep = "")), format = "fasta")
ancestral$nam <- gsub("\\..*", "", ancestral$nam, perl = T)
sequence_designation<-seq_designation(tree, 90, alignment, metadata, ancestral)
defining_node_information<-node_info(tree, 90, alignment, metadata, ancestral)
lineage_info<-lineage_info(sequence_designation, metadata)
write.csv(sequence_designation, file = (paste(args, "/Outputs/", args, "_sequence_data.csv", sep = "")), row.names=F)
write.csv(defining_node_information, file = (paste(args, "/Outputs/", args, "_node_data.csv", sep = "")), row.names=F)
write.csv(lineage_info, file = (paste(args, "/Outputs/", args, "_lineage_info.csv", sep = "")), row.names=F)
plot_tree<-lineage_tree(lineage_info, defining_node_information, tree, metadata, sequence_designation)
plot_tree
node_data<-defining_node_information
sequence_data<-sequence_designation
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
previous<-data.frame(assignment = unique(metadata$assignment), parent = "", n_seqs = NA)
previous$parent[1]<-""
for (i in 1:length(previous$assignment)) {
previous$n_seqs[i]<-length(which(metadata$alignment.name == previous$assignment[i]))
}
node_data<-node_data[order(node_data$lineage),]
node_data$parent<-NA
node_data$parent[1]<-""
for (i in 2:length(node_data$node)) {
if (length(which(node_data$node %in% treeio::ancestor(tree, node_data$node[i]))) == 0) {
node_data$parent[i]<-""
} else {
parent<-node_data$lineage[which(node_data$node %in% treeio::ancestor(tree, node_data$node[i]))]
node_data$parent[i]<-parent[length(parent)]
}
}
lineage_info$parent<-NA
for (i in 1:length(lineage_info$lineage)) {
lineage_info$parent[i]<-node_data$parent[which(node_data$lineage == lineage_info$lineage[i])]
}
View(node_data)
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
previous<-data.frame(assignment = unique(metadata$assignment), parent = "", n_seqs = NA)
previous$parent[1]<-""
for (i in 1:length(previous$assignment)) {
previous$n_seqs[i]<-length(which(metadata$alignment.name == previous$assignment[i]))
}
node_data<-node_data[order(node_data$lineage),]
View(node_data)
node_data$lineage<-node_data$cluster
node_data<-node_data[order(node_data$lineage),]
node_data$parent<-NA
node_data$parent[1]<-""
for (i in 2:length(node_data$node)) {
if (length(which(node_data$node %in% treeio::ancestor(tree, node_data$node[i]))) == 0) {
node_data$parent[i]<-""
} else {
parent<-node_data$lineage[which(node_data$node %in% treeio::ancestor(tree, node_data$node[i]))]
node_data$parent[i]<-parent[length(parent)]
}
}
