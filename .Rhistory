ggtree::geom_tippoint(colour = "grey50", size=4)  +
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info$colour)) +
ggtree::theme(legend.position = "none")
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info$colour), name="lineage")+
ggtree::theme(legend.position = "none")
plot_tree
View(lineage_info)
View(sequence_data)
gsub("Sudan_A1.1 NA", "NA", sequence_data$lineage)
sequence_data$lineage<-gsub("Sudan_A1.1 NA", "NA", sequence_data$lineage)
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
lineage_info$colour<-NA
Colours<-c("Reds","Purples","YlOrBr","PuBuGn","YlOrRd","OrRd","PuBu","Pastel1","Greens","Greys",
"GnBu","BuGn","RdPu","Oranges","BuPu","YlGn","PuRd","YlGnBu")
lineages<-data.frame(lineage = lineage_info$lineage, subclade = NA)
for (i in 1:length(lineages$lineage)) {
lineages$subclade[i]<-strsplit(lineages$lineage[i], "_")[[1]][1]
}
letters <- c("A1", "B1", "C1", "D1", "E1", "F1", "G1", "H1", "I1", "J1", "K1", "L1", "M1", "N1",
"O1", "P1", "Q1", "R1", "S1", "T1", "U1", "V1", "W1", "X1", "Y1", "Z1")
if(length(grep("_", lineage_info$lineage)) != 0) {
if (length(which(lineages$subclade %in% letters)) != 0) {
lineages<-lineages[-c(which(lineages$subclade %in% letters)),]
}
}
clades<-unique(lineages$subclade)
if(length(grep("\\.", clades)) != 0 ) {
clades<-clades[-c(grep("\\.", clades))]
}
lineage<-lineage_info$lineage[-c(grep("_", lineage_info$lineage))]
cols<-RColorBrewer::brewer.pal(9, "Blues")
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[-c(grep("_", lineage_info$lineage))]<-pal
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(colour = "grey50", size=4)  +
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info$colour)) +
ggtree::theme(legend.position = "none")
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info$colour), name="lineage")+
ggtree::theme(legend.position = "none")
plot_tree
tree$tip.label <- gsub("\\..*", "", tree$tip.label, perl = T)
tree$node.comment<- gsub(".*=", "", tree$node.label, perl = T)
lineage_info$colour<-NA
Colours<-c("Reds","Purples","YlOrBr","PuBuGn","YlOrRd","OrRd","PuBu","Pastel1","Greens","Greys",
"GnBu","BuGn","RdPu","Oranges","BuPu","YlGn","PuRd","YlGnBu")
lineages<-data.frame(lineage = lineage_info$lineage, subclade = NA)
for (i in 1:length(lineages$lineage)) {
lineages$subclade[i]<-strsplit(lineages$lineage[i], "_")[[1]][1]
}
letters <- c("A1", "B1", "C1", "D1", "E1", "F1", "G1", "H1", "I1", "J1", "K1", "L1", "M1", "N1",
"O1", "P1", "Q1", "R1", "S1", "T1", "U1", "V1", "W1", "X1", "Y1", "Z1")
if(length(grep("_", lineage_info$lineage)) != 0) {
if (length(which(lineages$subclade %in% letters)) != 0) {
lineages<-lineages[-c(which(lineages$subclade %in% letters)),]
}
}
clades<-unique(lineages$subclade)
if(length(grep("\\.", clades)) != 0 ) {
clades<-clades[-c(grep("\\.", clades))]
}
lineage<-lineage_info$lineage[-c(grep("_", lineage_info$lineage))]
cols<-RColorBrewer::brewer.pal(9, "Blues")
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[-c(grep("_", lineage_info$lineage))]<-pal
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
map<-MADDOG::lineage_map(lineage_info, defining_node_information, tree, metadata, sequence_designation)
write.csv(sequence_designation, file = (paste(args, "/Outputs/", args, "_sequence_data.csv", sep = "")), row.names=F)
write.csv(defining_node_information, file = (paste(args, "/Outputs/", args, "_node_data.csv", sep = "")), row.names=F)
write.csv(lineage_info, file = (paste(args, "/Outputs/", args, "_lineage_info.csv", sep = "")), row.names=F)
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/Documents/GitHub/Ebola/metadata.csv")
sequence_data<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
plot(tree)
tree$tip.label
tree <- treeio::tree_subset(tree, "MF540571", levels_back = 4)
plot(tree)
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
tree<-midpoint(tree)
tree<-ladderize(tree)
plot(treeio::tree_subset(tree, "MF540571", levels_back = 5))
plot(treeio::tree_subset(tree, "MF540571", levels_back = 6))
plot(treeio::tree_subset(tree, "MF540571", levels_back = 7))
plot(treeio::tree_subset(tree, "MF540571", levels_back = 8))
plot(treeio::tree_subset(tree, "MF540571", levels_back = 9))
plot(treeio::tree_subset(tree, "MF540571", levels_back = 8))
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
View(tree)
View(lineage_info)
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
View(lineage_info)
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
unique(lineage_info$lineage)
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
letters <- c("A1", "TaiForest_A1", "Bundibugyo_A2", "Sudan_A2", "Reston_A2","Bundibugyo_A1", "Reston_A1",
"Sudan_A1", "Bombali_A1", "A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
lineage<-grep(clades[i], lineage_info$lineage)
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
#This combines the new and relevant lineages into one table
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
#Selecting a list of colours ready to use
lineage_info$colour<-NA
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
letters <- c("Ebolavirus_A1", "TaiForest_A1", "Bundibugyo_A2", "Sudan_A2", "Reston_A2","Bundibugyo_A1", "Reston_A1",
"Sudan_A1", "Bombali_A1", "Ebolavirus_A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(metadata)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% metadata +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = metadata$lineage)
rownames(genotype)<-metadata$ID
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% metadata +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
plot_tree
attach(sequence_data)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info2$colour), name="lineage")+
ggtree::theme(legend.position = "none")
par(mar = c(5, 2, 5, 2))
#View the tree!
plot_tree
#If there are none - make the sunburst!
sunburst<-plotly::plot_ly(
labels = c(lineage_info$lineage),
parents = c(lineage_info$parent),
values = c(lineage_info$n_seqs),
type = "sunburst",
marker = list(colors = (lineage_info$colour))
)
#View the sunburst
sunburst
#View the sunburst
sunburst
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
#This combines the new and relevant lineages into one table
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
#Selecting a list of colours ready to use
lineage_info$colour<-NA
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
letters <- c("Ebolavirus_A1", "TaiForest_A1", "Bundibugyo_A2", "Sudan_A2", "Reston_A2","Bundibugyo_A1", "Reston_A1",
"Sudan_A1", "Bombali_A1", "Ebolavirus_A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info2$colour), name="lineage")+
ggtree::theme(legend.position = "none")
par(mar = c(5, 2, 5, 2))
#View the tree!
plot_tree
#Save the tree!
ggsave("~/Documents/GitHub/Serengeti/Figures/tree.png", plot = plot_tree)
#If there are none - make the sunburst!
sunburst<-plotly::plot_ly(
labels = c(lineage_info$lineage),
parents = c(lineage_info$parent),
values = c(lineage_info$n_seqs),
type = "sunburst",
marker = list(colors = (lineage_info$colour))
)
#View the sunburst
sunburst
View(lineage_info)
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
#This combines the new and relevant lineages into one table
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
#Selecting a list of colours ready to use
lineage_info$colour<-NA
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
letters <- c("Ebolavirus_A1", "TaiForest_A1", "Bundibugyo_A2", "Sudan_A2", "Reston_A2","Bundibugyo_A1", "Reston_A1",
"Sudan_A1", "Bombali_A1", "Ebolavirus_A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info2$colour), name="lineage")+
ggtree::theme(legend.position = "none")
par(mar = c(5, 2, 5, 2))
#View the tree!
plot_tree
#Save the tree!
ggsave("~/MADDOG/Ebola/Figures/figure_tree.png", plot = plot_tree)
#If there are none - make the sunburst!
sunburst<-plotly::plot_ly(
labels = c(lineage_info$lineage),
parents = c(lineage_info$parent),
values = c(lineage_info$n_seqs),
type = "sunburst",
marker = list(colors = (lineage_info$colour))
)
#View the sunburst
sunburst
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
#This combines the new and relevant lineages into one table
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
#Selecting a list of colours ready to use
lineage_info$colour<-NA
Colours<-c("Reds","Purples","OrRd","Greens","PuBu", "Blues", "YlGn","BuGn","Oranges", "BuPu")
letters <- c("Ebolavirus_A1", "TaiForest_A1", "Bundibugyo_A2", "Sudan_A2", "Reston_A2","Bundibugyo_A1", "Reston_A1",
"Sudan_A1", "Bombali_A1", "Ebolavirus_A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info2$colour), name="lineage")+
ggtree::theme(legend.position = "none")
par(mar = c(5, 2, 5, 2))
#View the tree!
plot_tree
#Save the tree!
ggsave("~/MADDOG/Ebola/Figures/figure_tree.png", plot = plot_tree)
#If there are none - make the sunburst!
sunburst<-plotly::plot_ly(
labels = c(lineage_info$lineage),
parents = c(lineage_info$parent),
values = c(lineage_info$n_seqs),
type = "sunburst",
marker = list(colors = (lineage_info$colour))
)
#View the sunburst
sunburst
rm(list=ls())
#Import your libraries
library(ggtree)
library(rgdal)
library(ggplot2)
library(phangorn)
library(castor)
library(ape)
sequence_data<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_sequence_data.csv")
lineage_info<-read.csv("~/MADDOG/Ebola/Outputs/Ebola_lineage_info.csv")
tree<-ape::read.tree("~/MADDOG/Ebola/test_outgroup_aligned.fasta.contree")
metadata<-read.csv("~/MADDOG/Ebola/Ebola_metadata.csv")
tree<-midpoint(tree)
tree<-ladderize(tree)
tree<-treeio::tree_subset(tree, "MF540571", levels_back = 8)
#This combines the new and relevant lineages into one table
for (i in 1:length(lineage_info$lineage)) {
lineage_info$n_seqs[i]<-length(which(sequence_data$lineage == lineage_info$lineage[i]))
}
#Selecting a list of colours ready to use
lineage_info$colour<-NA
Colours<-c("Reds","Greens","Purples","Blues","OrRd","Oranges","PuBu","BuGn", "YlGn", "BuPu")
letters <- c("Ebolavirus_A1", "TaiForest_A1", "Bundibugyo_A2", "Bundibugyo_A1","Sudan_A2", "Sudan_A1",
"Reston_A2", "Reston_A1","Bombali_A1", "Ebolavirus_A2")
#Assigning a colour group to each subclade (e.g. Purple may be AF1b) then giving each lineage a unique colour
# within the subclade colour group (e.g. AF1b_A1 = dark purple, AF1b_A1.1 = light purple)
clades<-unique(letters)
for (i in 1:length(clades)) {
lineage<-grep(clades[i], lineage_info$lineage)
cols<-RColorBrewer::brewer.pal(3, Colours[i])
pal<-colorRampPalette(c(cols))
pal<-rev(pal(length(lineage)))
lineage_info$colour[(grep(clades[i], lineage_info$lineage))]<-pal
}
attach(sequence_data)
lineage_info2<-lineage_info[-c(which(lineage_info$n_seqs == 0)),]
lineage_info2<-lineage_info2[order(lineage_info2$lineage),]
#Making a nice tree with tips colours according to lineage, outlined in grey for aesthetics
plot_tree<-ggtree::ggtree(tree, colour = "grey50", ladderize = T) %<+% sequence_data +
ggtree::geom_tippoint(color="grey50", size=4)+
ggtree::geom_tippoint(ggplot2::aes(color=lineage), size=3)  +
ggtree::theme(plot.title = ggplot2::element_text(size = 40, face = "bold"))+
ggtree::scale_color_manual(values=c(lineage_info2$colour)) +
ggtree::theme(legend.position = "none") + geom_treescale() + coord_cartesian(clip="off")
#Adding a bar along the side to show lineage colours/positions
genotype<-data.frame(lineage = sequence_data$lineage)
rownames(genotype)<-sequence_data$ID
plot_tree<-ggtree::gheatmap(plot_tree, genotype, offset=0.01, width=.1, font.size=3, color = NA,
colnames_angle=-45, hjust=0) +
ggtree::scale_fill_manual(values=c(lineage_info2$colour), name="lineage")+
ggtree::theme(legend.position = "none")
par(mar = c(5, 2, 5, 2))
#View the tree!
plot_tree
#Save the tree!
ggsave("~/MADDOG/Ebola/Figures/figure_tree.png", plot = plot_tree)
#If there are none - make the sunburst!
sunburst<-plotly::plot_ly(
labels = c(lineage_info$lineage),
parents = c(lineage_info$parent),
values = c(lineage_info$n_seqs),
type = "sunburst",
marker = list(colors = (lineage_info$colour))
)
#View the sunburst
sunburst
#Save the sunburst as an interactive html!
htmlwidgets::saveWidget(plotly::as_widget(sunburst), "~/MADDOG/Ebola/Figures/sunburst.html")
View(lineage_info)
